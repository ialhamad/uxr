$themes: (
		default-theme: (
				color: $site-brand-color,
				headerbgcolor: $site-secondary-color,
				headertext: $text-onDark,
				headerborder: $site-light-tint,
		),
		series-phyto: (
				color: $jrnl-phyto-color,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/phyto-hero.jpg'),
		),
		series-pdis: (
				color: $jrnl-pdis-color,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/pdis-hero.jpg'),
		),
		series-mpmi: (
				color: $jrnl-mpmi-color,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/mpmi-hero.jpg'),
		),
		series-pbiomes: (
				color: $jrnl-pbiomes-color,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/pbiomes-hero.jpg'),
		),
		series-php: (
				color: $jrnl-php-color,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/php-hero.jpg'),
		),
		series-ebooks: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-outreach: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-bacteriology: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-compendia: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-epidemiology: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-gpp: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-ipm: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-mpp: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-mycology: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-classics: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		),
		series-protocols: (
				color: $series-ebooks,
				headerbgcolor: $site-page-background,
				headertext: $site-dark-text,
				headerborder: $site-light-border,
				heroimage: url('/pb-assets/ux3/images/hero-images/ebooks-hero.jpg'),
		)
) !default;

@mixin themify($themes: $themes) {
	@each $theme, $map in $themes {

		.#{$theme} & {
			$theme-map: () !global;
			@each $key, $submap in $map {
				$value: map-get(map-get($themes, $theme), '#{$key}');
				$theme-map: map-merge($theme-map, ($key: $value)) !global;
			}
			@content;
			$theme-map: null !global;
		}

	}
}

@function themed($key) {
	@return map-get($theme-map, $key);
}

.theme-color {
	color: $site-brand-color;
	@include themify($themes) {
		color: themed('color');
	}
}

.theme-background {
	background-color: $site-brand-color;
	@include themify($themes) {
		background-color: themed('color');
	}
}